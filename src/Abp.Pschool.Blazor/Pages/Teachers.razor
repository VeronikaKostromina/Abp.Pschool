@page "/teachers"
@using Abp.Pschool.Teachers
@using Abp.Pschool.Localization
@using Abp.Pschool.Students
@using Volo.Abp.AspNetCore.Components.Web
@inherits PschoolComponentBase
@inject ITeacherAppService TeacherAppService
@inject AbpBlazorMessageLocalizerHelper<PschoolResource> LH

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Teachers"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                @if (CanCreateTeacher)
                {
                    <Button Color="Color.Primary"
                            Clicked="OpenCreateTeacherModal">
                        @L["NewTeacher"]
                    </Button>
                }
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="TeacherDto"
                  Data="TeacherList"
                  ReadData="OnDataGridReadTeachersAsync"
                  TotalItems="TotalTeacherCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="TeacherDto"
                                Field="@nameof(TeacherDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditTeacher)
                                {
                                    <DropdownItem Clicked="() => OpenEditTeacherModal(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteTeacher)
                                {
                                    <DropdownItem Clicked="() => DeleteTeacherAsync(context)">
                                        @L["Delete"]
                                    </DropdownItem>
                                }
                                <DropdownItem Clicked="() => OpenStudentListModal(context)">
                                    @L["ShowStudentList"]
                                </DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="TeacherDto"
                                Field="@nameof(TeacherDto.FirstName)"
                                Caption="@L["FirstName"]"></DataGridColumn>
                <DataGridColumn TItem="TeacherDto"
                                Field="@nameof(TeacherDto.LastName)"
                                Caption="@L["LastName"]"></DataGridColumn>
                <DataGridColumn TItem="TeacherDto"
                                Field="@nameof(TeacherDto.Phone)"
                                Caption="@L["Phone"]"></DataGridColumn>
                <DataGridColumn TItem="TeacherDto"
                                Field="@nameof(TeacherDto.Email)"
                                Caption="@L["Email"]">
                </DataGridColumn>
                <DataGridColumn TItem="TeacherDto"
                                Field="@nameof(TeacherDto.HomeAddress)"
                                Caption="@L["HomeAddress"]"></DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateTeacherModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewTeacher"]</ModalTitle>
                <CloseButton Clicked="CloseCreateTeacherModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewTeacher" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FirstName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewTeacher.FirstName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewTeacher.LastName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <TextEdit @bind-Text="@NewTeacher.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Phone"]</FieldLabel>
                            <TextEdit @bind-Text="@NewTeacher.Phone">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["HomeAddress"]</FieldLabel>
                        <TextEdit @bind-Text="@NewTeacher.HomeAddress">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateTeacherModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateTeacherAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditTeacherModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingTeacher.FirstName @EditingTeacher.LastName</ModalTitle>
                <CloseButton Clicked="CloseEditTeacherModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@NewTeacher" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FirstName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingTeacher.FirstName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["LastName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingTeacher.LastName">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingTeacher.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Phone"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingTeacher.Phone">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["HomeAddress"]</FieldLabel>
                        <TextEdit @bind-Text="@EditingTeacher.HomeAddress">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditTeacherModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateTeacherAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="StudentListModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true" Size="ModalSize.Large">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["StudentList"]</ModalTitle>
                <CloseButton Clicked="CloseStudentListModal" />
            </ModalHeader>
            <ModalBody>
                <DataGrid TItem="StudentDto"
                          Data="StudentList"
                          ReadData="OnDataGridReadStudentsAsync"
                          TotalItems="TotalStudentCount"
                          ShowPager="true"
                          PageSize="PageSize">
                    <DataGridColumns>
                        <DataGridColumn TItem="StudentDto"
                                        Field="@nameof(StudentDto.FirstName)"
                                        Caption="@L["FirstName"]"></DataGridColumn>
                        <DataGridColumn TItem="StudentDto"
                                        Field="@nameof(StudentDto.LastName)"
                                        Caption="@L["LastName"]"></DataGridColumn>
                        <DataGridColumn TItem="StudentDto"
                                        Field="@nameof(StudentDto.ClassNumber)"
                                        Caption="@L["Phone"]"></DataGridColumn>
                        <DataGridColumn TItem="StudentDto"
                                        Field="@nameof(StudentDto.Email)"
                                        Caption="@L["Email"]">
                        </DataGridColumn>
                        <DataGridColumn TItem="StudentDto"
                                        Field="@nameof(StudentDto.Type)"
                                        Caption="@L["Type"]">
                            <DisplayTemplate>
                                @L[$"Enum:StudentMarkType.{context.Type}"]
                            </DisplayTemplate>
                        </DataGridColumn>
                    </DataGridColumns>
                </DataGrid>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseStudentListModal">
                    @L["Cancel"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code
{
    
}